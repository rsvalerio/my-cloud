name: Deploy to Fly
on:
  pull_request:
    paths:
      - 'vault-unsealer/**'
      - '!vault-unsealer/docs/**'
jobs:
  check-dockerfile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: vault-unsealer/Dockerfile

  trivy-security-scan:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build an image from Dockerfile
        run: |
          docker build -t docker.io/my-organization/my-app:${{ github.sha }} .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
  # build:
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Build an image from Dockerfile
  #       run: |
  #         docker build -t docker.io/my-organization/my-app:${{ github.sha }} .
  #     - name: Run Trivy vulnerability scanner
  #       uses: aquasecurity/trivy-action@master
  #       with:
  #         image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
  #         format: 'table'
  #         exit-code: '1'
  #         ignore-unfixed: true
  #         vuln-type: 'os,library'
  #         severity: 'CRITICAL,HIGH'

  leaked-secrets-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  deploy:
    name: Deploy vault-unsealer app
    needs: ["check-dockerfile","leaked-secrets-scan","trivy-security-scan"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only --region ams
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        working-directory: ./vault-unsealer
